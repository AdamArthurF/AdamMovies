{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["MyApp","props","state","data1","data2","error","handleSearch","bind","handleDetails","document","body","addEventListener","event","a","target","classList","contains","dataset","imdbid","fetch","getElementById","value","then","response","json","results","setState","Search","catch","errors","console","undefined","this","Fragment","map","result","className","key","imdbID","Date","getMilliseconds","Math","random","src","Poster","alt","Title","Year","type","data-toggle","data-target","data-imdbid","Director","Actors","Writer","Plot","id","placeholder","aria-label","aria-describedby","onClick","ShowCards","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","showDetails","getFullYear","Component","App","path","component","exact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","ReactDOM","render","basename","process","StrictMode","URL","href","origin","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.024e5f3b.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './assets/css/style.css';\nimport {Route, Switch} from \"react-router-dom\";\n\nclass MyApp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data1: [],\n            data2: [],\n            error: null,\n        };\n        this.handleSearch = this.handleSearch.bind(this);\n        this.handleDetails = this.handleDetails.bind(this);\n    }\n\n    componentDidMount() {\n        document.body.addEventListener('click', async (event) => {\n            if (event.target.classList.contains('detailsModal')) {\n                await this.handleDetails(event.target.dataset.imdbid);\n            }\n        })\n    }\n\n    async handleSearch(){\n        await fetch(`https://www.omdbapi.com/?apikey=ae201a99&s=${\n            document.getElementById('input-movie').value}`)\n            .then(response => response.json())\n            .then(results => {\n                this.setState({\n                    data1: results.Search,\n                });\n            })\n            .catch(errors => {\n                this.setState({\n                    error: errors\n                });\n                console.error(this.state.error);\n            });\n    }\n\n    async handleDetails(imdbid) {\n        await fetch(`https://www.omdbapi.com/?apikey=ae201a99&i=${imdbid}`)\n            .then(response => response.json())\n            .then(results => {\n                this.setState({\n                    data2: results,\n                });\n            })\n            .catch(errors => {\n                this.setState({\n                    error: errors,\n                })\n            });\n    }\n\n    ShowCards() {\n        if (this.state.data1 !== undefined) {\n            return (\n                <React.Fragment>\n                    {this.state.data1.map(result => {\n                        return (\n                            <div className=\"col-md-4 my-5\" key={result.imdbID + new Date().getMilliseconds() + Math.random()}>\n                                <div className=\"card\">\n                                    <img src={result.Poster} className=\"card-img-top\" alt=\"...\"/>\n                                    <div className=\"card-body\">\n                                        <h5 className=\"card-title\">{result.Title}</h5>\n                                        <h6 className=\"card-subtitle text-muted mb-2\">{result.Year}</h6>\n                                        <button type=\"button\" className=\"btn btn-primary detailsModal\" data-toggle=\"modal\" data-target=\"#moviesModal\" data-imdbid={result.imdbID}>Show Details</button>\n                                    </div>\n                                </div>\n                            </div>\n                        );\n                    })}\n                </React.Fragment>\n            );\n        } else {\n            return <h1>No Result</h1>\n        }\n    }\n\n    showDetails(){\n        return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-md-3\">\n                    <img src={this.state.data2.Poster} alt=\"Gambar\" className=\"img-fluid\"/>\n                </div>\n                <div className=\"col-md\">\n                    <ul>\n                        <li className=\"list-group-item\"><h4>{this.state.data2.Title} ({this.state.data2.Year})</h4></li>\n                        <li className=\"list-group-item\"><strong>Director : </strong>{this.state.data2.Director}</li>\n                        <li className=\"list-group-item\"><strong>Actors : </strong>{this.state.data2.Actors}</li>\n                        <li className=\"list-group-item\"><strong>Writer : </strong>{this.state.data2.Writer}</li>\n                        <li className=\"list-group-item\"><strong>Plot : </strong><br/>{this.state.data2.Plot}</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        );\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <header>\n                    <div className=\"container\">\n                        <h1 className=\"mt-5 mb-5 font-weight-bold display-4 adam-movies\">AdamMovies.com</h1>\n                        <div className=\"input-group mb-3\">\n                            <input type=\"text\" className=\"form-control input-movie\" id=\"input-movie\"\n                                   placeholder=\"Search movie\" aria-label=\"Search movie\"\n                                   aria-describedby=\"basic-addon2\"/>\n                            <div className=\"input-group-append\">\n                                <button className=\"btn btn-outline-primary search-button\"\n                                        id=\"search-button\" onClick={this.handleSearch}>\n                                    Search\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </header>\n                <main>\n                    <div className=\"container\">\n                        <div className=\"row daftar-film\">\n                            {this.ShowCards()}\n                        </div>\n                    </div>\n                    <div className=\"modal fade\" id=\"moviesModal\" tabIndex=\"-1\" role=\"dialog\"\n                         aria-labelledby=\"moviesModalLabel\" aria-hidden=\"true\">\n                        <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\n                            <div className=\"modal-content\">\n                                <div className=\"modal-header\">\n                                    <h5 className=\"modal-title\" id=\"moviesModalLabel\">Modal title</h5>\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                        <span aria-hidden=\"true\">&times;</span>\n                                    </button>\n                                </div>\n                                <div className=\"modal-body\">\n                                    {this.showDetails()}\n                                </div>\n                                <div className=\"modal-footer\">\n                                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </main>\n                <footer>\n                    <h5 className=\"text-center\">Copyright &copy; {new Date().getFullYear()}. Adam Arthur Faizal</h5>\n                </footer>\n            </React.Fragment>\n        );\n    }\n}\n\nclass App extends Component {\n    render() {\n        return (\n            <Switch>\n                <Route path=\"/\" component={MyApp} exact/>\n            </Switch>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}